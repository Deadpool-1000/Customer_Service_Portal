CREATE_TABLE_CUST_AUTH : 'CREATE TABLE IF NOT EXISTS cust_auth (cid text PRIMARY KEY, email TEXT UNIQUE, password TEXT)'
CREATE_TABLE_EMP : 'CREATE TABLE IF NOT EXISTS emp_auth (e_id TEXT PRIMARY KEY, email TEXT UNIQUE, password TEXT)'
FIND_USER_QUERY : 'SELECT * FROM {} WHERE email = ?'
FIND_DEPT_BY_DEPTID : 'SELECT dept_name from dept WHERE dept_id=?'
INSERT_INTO_CUSTOMER_AUTH_TABLE : 'INSERT INTO cust_auth VALUES(?, ?, ?)'
CREATE_TABLE_CUST_DETAILS : 'CREATE TABLE IF NOT EXISTS cust_details (cid TEXT PRIMARY KEY,full_name TEXT, phn_num TEXT,address TEXT, FOREIGN KEY(cid) REFERENCES cust_auth(cid))'
GET_CUST_DETAILS_BY_ID : 'SELECT * FROM cust_details WHERE cid = ?'
INSERT_INTO_CUST_DETAILS : 'INSERT INTO cust_details VALUES(?, ?, ?, ?)'
CREATE_TABLE_FEEDBACK : 'CREATE TABLE IF NOT EXISTS feedback(f_id TEXT PRIMARY KEY, stars INTEGER, desc TEXT, t_id TEXT, FOREIGN KEY(t_id) REFERENCES tickets(t_id))'
INSERT_INTO_TICKETS : 'INSERT INTO feedback VALUES(?, ?, ?, ?)'
GET_ALL_FEEDBACK : 'SELECT * FROM feedback'
CREATE_TABLE_DEPT_DETAILS : "CREATE TABLE IF NOT EXISTS dept_details(dept_id TEXT PRIMARY KEY, dept_name TEXT)"
CREATE_TABLE_EMP_DETAILS : "CREATE TABLE IF NOT EXISTS emp_details (e_id TEXT PRIMARY KEY, full_name TEXT, phn_num TEXT, dept_id TEXT, address TEXT, designation TEXT, FOREIGN KEY(dept_id) REFERENCES dept_details(dept_id), FOREIGN KEY(e_id) REFERENCES emp_auth(e_id))"
GET_EMPLOYEE_DETAILS_BY_ID : "SELECT * FROM emp_details WHERE e_id = ?"
DEPT_TABLE_MAPPING_QUERY : "SELECT * FROM dept_details"
GET_DEPT_DETAILS_BY_ID : "SELECT * FROM dept_details WHERE dept_id = ?"
CREATE_TABLE_TICKETS: | 
  CREATE TABLE IF NOT EXISTS tickets (
    t_id TEXT PRIMARY_KEY,
    d_id TEXT NOT NULL,
    c_id TEXT NOT NULL,
    repr_id TEXT,
    title TEXT NOT NULL,
    desc TEXT NOT NULL,
    status TEXT NOT NULL,
    cust_feedback_id TEXT,
    created_on timestamp,
    message_from_admin TEXT
  )
INSERT_INTO_TICKETS_TABLE : "INSERT INTO tickets(t_id, d_id, c_id, title, desc, status, created_on, message_from_admin) VALUES(?, ?, ?, ?, ?, ?, ?, ?)"
VIEW_TICKETS : "SELECT * FROM tickets WHERE c_id = ? AND status = ?"
VIEW_TICKETS_BY_STATUS : "SELECT * FROM tickets WHERE status = ? AND d_id = ?"
VIEW_ALL_TICKETS : "SELECT * FROM tickets ORDER BY created_on DESC"
UPDATE_MESSAGE_FROM_HELPDESK : "UPDATE tickets SET message_from_admin = ? WHERE t_id = ?"
UPDATE_TICKET_STATUS : "UPDATE tickets SET status=? WHERE t_id = ?"
ASSIGN_REPR : "UPDATE tickets SET repr_id=? WHERE t_id=?"



